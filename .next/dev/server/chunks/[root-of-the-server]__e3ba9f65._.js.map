{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 22, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/KarmaFlow/lib/db.js"],"sourcesContent":["import mongoose from \"mongoose\";\n\nconst uri = process.env.MONGODB_URI;\n\nif (!uri) throw new Error(\"MONGODB_URI n√£o definido nos secrets\");\n\nmongoose.connect(uri);\n\nexport default mongoose;\n"],"names":[],"mappings":";;;;AAAA;;AAEA,MAAM,MAAM,QAAQ,GAAG,CAAC,WAAW;AAEnC,IAAI,CAAC,KAAK,MAAM,IAAI,MAAM;AAE1B,oHAAQ,CAAC,OAAO,CAAC;uCAEF,oHAAQ","debugId":null}},
    {"offset": {"line": 36, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/KarmaFlow/pages/api/feedback.js"],"sourcesContent":["import dbConnect from \"../../lib/db\";\nimport mongoose from \"mongoose\";\n\nconst FeedbackSchema = new mongoose.Schema({\n  message: String,\n  anonymous: Boolean,\n  author: String,\n});\n\nconst Feedback =\n  mongoose.models.Feedback || mongoose.model(\"Feedback\", FeedbackSchema);\n\nexport default async function handler(req, res) {\n  await dbConnect();\n\n  if (req.method === \"POST\") {\n    const fb = await Feedback.create(req.body);\n    return res.status(201).json(fb);\n  }\n\n  if (req.method === \"GET\") {\n    const all = await Feedback.find().sort({ _id: -1 });\n    return res.status(200).json(all);\n  }\n\n  res.status(405).end();\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEA,MAAM,iBAAiB,IAAI,oHAAQ,CAAC,MAAM,CAAC;IACzC,SAAS;IACT,WAAW;IACX,QAAQ;AACV;AAEA,MAAM,WACJ,oHAAQ,CAAC,MAAM,CAAC,QAAQ,IAAI,oHAAQ,CAAC,KAAK,CAAC,YAAY;AAE1C,eAAe,QAAQ,GAAG,EAAE,GAAG;IAC5C,MAAM,IAAA,6GAAS;IAEf,IAAI,IAAI,MAAM,KAAK,QAAQ;QACzB,MAAM,KAAK,MAAM,SAAS,MAAM,CAAC,IAAI,IAAI;QACzC,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;IAC9B;IAEA,IAAI,IAAI,MAAM,KAAK,OAAO;QACxB,MAAM,MAAM,MAAM,SAAS,IAAI,GAAG,IAAI,CAAC;YAAE,KAAK,CAAC;QAAE;QACjD,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;IAC9B;IAEA,IAAI,MAAM,CAAC,KAAK,GAAG;AACrB","debugId":null}}]
}